{"ast":null,"code":"var _jsxFileName = \"/home/nathaly/Documents/Nath/Estudos/Projetos/weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Lottie from \"lottie-react\";\nimport \"./App.css\";\n\n// Importando as animações\nimport dayStorm from \"./animations/day_storm.json\";\nimport moonClear from \"./animations/moon_clear.json\";\nimport moonCloudy from \"./animations/moon_cloudy.json\"; // Adicionada\nimport nightSnow from \"./animations/night_snow.json\";\nimport partlyCloudy from \"./animations/partly_cloudy.json\";\nimport rainyDay from \"./animations/rainy_day.json\";\nimport rainyNight from \"./animations/rainy_night.json\";\nimport snow from \"./animations/snow.json\";\nimport storm from \"./animations/storm.json\";\nimport sunnySnow from \"./animations/sunny_snow.json\"; // Adicionada\nimport sunny from \"./animations/sunny.json\";\nimport thunder from \"./animations/thunder.json\"; // Adicionada\nimport windy from \"./animations/windy.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const getWeather = async () => {\n    if (!city) {\n      setError(\"Please enter a city name.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=${language}`);\n      setWeather(response.data);\n      setError(\"\");\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.message);\n      } else {\n        setError(\"Erro de conexão. Tente novamente mais tarde.\");\n      }\n      setWeather(null);\n    }\n  };\n  const getWeatherAnimation = code => {\n    const isNight = weather && weather.weather[0].icon.includes(\"n\");\n    if (code >= 200 && code < 300) return isNight ? thunder : dayStorm;\n    if (code >= 300 && code < 400) return isNight ? rainyNight : rainyDay;\n    if (code >= 500 && code < 600) return isNight ? rainyNight : rainyDay;\n    if (code >= 600 && code < 700) {\n      if (isNight) return nightSnow;\n      if (code === 600 || code === 601) return sunnySnow;\n      return snow;\n    }\n    if (code >= 700 && code < 800) return windy;\n    if (code === 800) return isNight ? moonClear : sunny;\n    if (code === 801 || code === 802) return isNight ? moonCloudy : partlyCloudy;\n    if (code > 802 && code <= 804) return partlyCloudy;\n    return sunny;\n  };\n  const translateDescription = code => {\n    const translations = {\n      200: \"tempestade com trovões leves\",\n      202: \"tempestade forte com trovões\",\n      300: \"chuvisco leve\",\n      500: \"chuva leve\",\n      600: \"neve leve\",\n      800: \"céu limpo\",\n      801: \"poucas nuvens\",\n      802: \"nuvens dispersas\",\n      803: \"nuvens fragmentadas\",\n      804: \"nublado\"\n    };\n    return translations[code] || \"Clima desconhecido\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [language === \"en\" ? \"Weather in\" : \"Clima em\", \" \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [weather.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: language === \"en\" ? weather.weather[0].description : translateDescription(weather.weather[0].id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lottie-container\",\n        children: /*#__PURE__*/_jsxDEV(Lottie, {\n          animationData: getWeatherAnimation(weather.weather[0].id),\n          style: {\n            width: 150,\n            height: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          placeholder: language === \"en\" ? \"Enter city\" : \"Digite a cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getWeather,\n          children: language === \"en\" ? \"Get Weather\" : \"Obter Clima\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-select\",\n          children: \"Select Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-select\",\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pt\",\n            children: \"Portugu\\xEAs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0I+gqBH1w78CTEoGw5w0kJOz9eE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Lottie","dayStorm","moonClear","moonCloudy","nightSnow","partlyCloudy","rainyDay","rainyNight","snow","storm","sunnySnow","sunny","thunder","windy","jsxDEV","_jsxDEV","App","_s","city","setCity","weather","setWeather","error","setError","language","setLanguage","apiKey","process","env","REACT_APP_API_KEY","getWeather","response","get","data","err","message","getWeatherAnimation","code","isNight","icon","includes","translateDescription","translations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","id","animationData","style","width","height","type","value","onChange","e","target","placeholder","onClick","htmlFor","_c","$RefreshReg$"],"sources":["/home/nathaly/Documents/Nath/Estudos/Projetos/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Lottie from \"lottie-react\";\nimport \"./App.css\";\n\n// Importando as animações\nimport dayStorm from \"./animations/day_storm.json\";\nimport moonClear from \"./animations/moon_clear.json\";\nimport moonCloudy from \"./animations/moon_cloudy.json\"; // Adicionada\nimport nightSnow from \"./animations/night_snow.json\";\nimport partlyCloudy from \"./animations/partly_cloudy.json\";\nimport rainyDay from \"./animations/rainy_day.json\";\nimport rainyNight from \"./animations/rainy_night.json\";\nimport snow from \"./animations/snow.json\";\nimport storm from \"./animations/storm.json\";\nimport sunnySnow from \"./animations/sunny_snow.json\"; // Adicionada\nimport sunny from \"./animations/sunny.json\";\nimport thunder from \"./animations/thunder.json\"; // Adicionada\nimport windy from \"./animations/windy.json\";\n\nconst App = () => {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n\n  const apiKey = process.env.REACT_APP_API_KEY;\n\n  const getWeather = async () => {\n    if (!city) {\n      setError(\"Please enter a city name.\");\n      return;\n    }\n\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric&lang=${language}`\n      );\n      setWeather(response.data);\n      setError(\"\");\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data.message);\n      } else {\n        setError(\"Erro de conexão. Tente novamente mais tarde.\");\n      }\n      setWeather(null);\n    }\n  };\n\n  const getWeatherAnimation = (code) => {\n    const isNight = weather && weather.weather[0].icon.includes(\"n\");\n\n    if (code >= 200 && code < 300) return isNight ? thunder : dayStorm;\n    if (code >= 300 && code < 400) return isNight ? rainyNight : rainyDay;\n    if (code >= 500 && code < 600) return isNight ? rainyNight : rainyDay;\n    if (code >= 600 && code < 700) {\n      if (isNight) return nightSnow;\n      if (code === 600 || code === 601) return sunnySnow;\n      return snow;\n    }\n    if (code >= 700 && code < 800) return windy;\n    if (code === 800) return isNight ? moonClear : sunny;\n    if (code === 801 || code === 802)\n      return isNight ? moonCloudy : partlyCloudy;\n    if (code > 802 && code <= 804) return partlyCloudy;\n\n    return sunny;\n  };\n\n  const translateDescription = (code) => {\n    const translations = {\n      200: \"tempestade com trovões leves\",\n      202: \"tempestade forte com trovões\",\n      300: \"chuvisco leve\",\n      500: \"chuva leve\",\n      600: \"neve leve\",\n      800: \"céu limpo\",\n      801: \"poucas nuvens\",\n      802: \"nuvens dispersas\",\n      803: \"nuvens fragmentadas\",\n      804: \"nublado\",\n    };\n\n    return translations[code] || \"Clima desconhecido\";\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>\n        {language === \"en\" ? \"Weather in\" : \"Clima em\"} {city}\n      </h1>\n\n      {weather && (\n        <div className=\"card\">\n          <h2>{weather.main.temp} °C</h2>\n          <p>\n            {language === \"en\"\n              ? weather.weather[0].description\n              : translateDescription(weather.weather[0].id)}\n          </p>\n          <div className=\"lottie-container\">\n            <Lottie\n              animationData={getWeatherAnimation(weather.weather[0].id)}\n              style={{ width: 150, height: 150 }}\n            />\n          </div>\n        </div>\n      )}\n\n      <div className=\"input-container\">\n        <div className=\"weather-info\">\n          <input\n            type=\"text\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            placeholder={language === \"en\" ? \"Enter city\" : \"Digite a cidade\"}\n          />\n          <button onClick={getWeather}>\n            {language === \"en\" ? \"Get Weather\" : \"Obter Clima\"}\n          </button>\n        </div>\n\n        <div>\n          <label htmlFor=\"language-select\">Select Language:</label>\n          <select\n            id=\"language-select\"\n            value={language}\n            onChange={(e) => setLanguage(e.target.value)}\n          >\n            <option value=\"en\">English</option>\n            <option value=\"pt\">Português</option>\n          </select>\n        </div>\n      </div>\n\n      {error && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}